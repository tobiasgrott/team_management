name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - master

jobs:
  build:
    
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

    # Set Release Version Number
    - name: Export Release Timestamp
      run: echo "::set-env name=NOW::$(date +'%Y%m%dT%H%M%S')"


    # Setup Java environment in order to build the Android app
    - uses: actions/checkout@v1

    - name: Provide Firebase Android
      env:
        FIREBASE_CONFIG: ${{ secrets.GOOGLE_SERVICES_JSON }}
      run: echo $FIREBASE_CONFIG > ./android/app/google-services.json

    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'dev' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    # enable web
    - run: flutter config --enable-web
    
    # Get flutter dependencies
    - run: flutter pub get

    # Check for any formatting issues in the code
    - run: flutter format --set-exit-if-changed .

    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .

    # Run widget tests for our flutter project.
    - run: flutter test

    - run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        
    # Build apk.
    - run: flutter build apk --split-per-abi
      env:
        KEY_STORE_PASSWORD: ${{ secrets.PLAYSTORE_KEY_STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.PLAYSTORE_KEY_PASSWORD }}
        ALIAS: ${{ secrets.PLAYSTORE_ALIAS }}
        KEY_PATH: key.jks
    
    # Build ios
    # needs runs-on: macos-latest
    # - name: Build iOS App
    #   run: |
    #     flutter build ios --no-codesign
    #     cd build/ios/iphoneos
    #     mkdir Payload
    #     cd Payload
    #     ln -s ../Runner.app
    #     cd ..
    #    zip -r app.ipa Payload

    # Build Web App
    - name: Build Web App
      run: |
        flutter build web
        cd build/web
        zip -r web-app.zip .

    - name: Create a Release APK
      #if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with: 
        tag: release_${{ env.NOW }}
        name: release_${{ env.NOW }}
        prerelease: true
        # build/ios/iphoneos/app.ipa
        artifacts: "build/app/outputs/apk/release/*.apk,build/web/web-app.zip"
        token: ${{ secrets.TOKEN }}
